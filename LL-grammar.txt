1. <program> → <section>
2. <section> → <statements> <function-definitions> <section>
3. <section> → ε

4. <statements> → <statement> <statements>
5. <statements> → ε
6. <statement> → <var-declaration>
7. <statement> → <assignment>
8. <statement> → <conditional>
9. <statement> → <loop>
10. <statement> → <function-call>
11. <statement> → <return-statement>

12. <var-declaration> → let id <optional-type> <optional-expression>
13. <var-declaration> → var id <optional-type> <optional-expression>
14. <optional-type> → : <type>
15. <optional-type> → ε
16. <optional-expression> → = <expression>
17. <optional-expression> → ε
18. <assignment> → id = <expression>

19. <function-definitions> → <function-definition> <function-definitions>
20. <function-definitions> → ε
21. <function-definition> → func id ( <parameters> ) <optional-return-type> <block>
22. <optional-return-type> → -> <type>
23. <optional-return-type> → ε
24. <parameters> → <parameter> <more-parameters>
25. <parameters> → ε
26. <parameter> → <name> id : <type>
27. <name> → id
28. <name> → _
29. <more-parameters> → , <parameter> <more-parameters>
30. <more-parameters> → ε

31. <function-call> → <optional-var-declaration> id = id ( <arguments> )
32. <function-call> → id ( <arguments> )
33. <optional-var-declaration> → let
34. <optional-var-declaration> → var
35. <optional-var-declaration> → ε
36. <arguments> → <argument> <more-arguments>
37. <arguments> → ε
38. <argument> → <name> : <expression>
39. <argument> → <expression>
40. <more-arguments> → , <argument> <more-arguments>
41. <more-arguments> → ε
42. <return-statement> → return <expression>
43. <return-statement> → return

44. <conditional> → if <expression-or-id> <block> <else-part>
45. <expression-or-id> → <expression>
46. <expression-or-id> → let id
47. <else-part> → else <block>
48. <else-part> → ε 
49. <loop> → while <expression> <block>
50. <block> → { <statements> }

51. <type> → Int
52. <type> → Double
53. <type> → String